<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="carregaImagem.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Gxyc6htfnkdX51HZeWruww2vP7+74eI0GiVe5/j2/GcdF6xvwZM/T+/NAzz3mvL6Di8e8GKQMWwsZffm
        FqT//Wk0vbXOl1bk9bfhxRU5AO9rYP2Z/7Rg/ZvLQ2gW67+7eMCrwQAIAAACAIAAACAAAAgAAAIAgAAA
        IAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAAB
        IAAAASAAAAEgAAABIAAAASAAAAEAQAAAEAAABAAAAQBAAAAQAAAEAAABAEAAABAAAAQAAAEAQAAAEAAA
        BAAAAQAIAAEACAABAAgAAQAIAAEACAABAAgAAQAIAAEACAABAAgAAQAIAAEACAABAAgAAQAIAAEACAAB
        AAgAAQAIAAEACAABAAgAAQAIAAEACAAXAhAAAAQAAAEAQAAAEAAABAAAAQBAAAAQAAAEAAABAEAAABAA
        AAQAAAEAQAAAEACAABAAgAAQAIAAEACAABAAgAAQAIAAmKXmgttdCKARbisebEy7B9e5EEAjXBvs1mQA
        LAsuciGARriweLBRvSn4p4sB1Er23NGpBdo5uCB41kUBaiF7bXWwU2qJ9gyuFAJALeb/brAytUw5BM4P
        7neRgJmV/auL11qpXJIcVRqD15Ztig0AJua24qWLynf+nVIHtKxsT8yVgwoAJmOueGlZIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIiIiIiKiIel/iYxknAdIIDIAAAAASUVORK5CYII=
</value>
  </data>
</root>